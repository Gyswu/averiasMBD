{block content}

    <div class="container">

        <br>

        <div class="row">
            <div class="col-12 col-lg-6">
                <h1 n:block = "title"> Clientes </h1>
            </div>

            <div class="col-12 col-lg-6">

                <a n:href = "Empresas:add" class="text-success"><h1><i class="fa-solid fa-plus"></i></h1></a>
                <input type="search" id="search" data-input-search>

            </div>
        </div>
        <br>

        <div class="row">

            <div class="col-12 col-lg-12">

                <table class="table">

                    <thead class="thead-dark">

                    <tr>

                <!--        <th class="id" data-sort-id sortById="0"> ID</th>

                        <th class="nif" data-sort-nif sortByNif="0"> Nif</th> -->

                        <th data-sort-name sortByName="0"> Nombre</th>

                        <th data-sort-telf sortByTelf="0"> Telefono</th>

                        <th data-sort-dir sortByDir="0"> Direccion</th>

                        <th style="width: 15%;"> Opciones</th>

                    </tr>

                    </thead>
                        <template class="table" data-client-template>
                        <tr id="card">
                    <!--        <td class="id" data-identifier></td>
                            <td class="nif" data-nif></td> -->
                            <td class="name" data-name></td>
                            <td class="telef"><a href="" class="text-decoration-none nounderline" data-tel></a></td>
                            <td class="dir"><a href="" class="text-decoration-none nounderline" data-dir></a></td>
                            <td class="options" data-options>
                            <div class="dropdown">
                                <button class="btn btn-warning dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Opciones
                            </button>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                    <a class="dropdown-item" data-action-info href="">Informaci√≥n</a>
                                    <a class="dropdown-item" data-action-edit href="#">Editar</a>
                                    <a class="dropdown-item" data-action-users href="#">Usuarios</a>
                                    <a class="dropdown-item" data-action-printers href="#">Impresoras</a>
                                    {if $usuarioDb->rol == "admin"}
                                    <a class="dropdown-item" href="" data-action-remove class="text-danger">Eliminar</a>
                                    {/if}
                                </div>
                            </div>
                            </td>
                        </tr>
                        </template>
                    <tbody data-content-container>
                    </tbody>

                </table>

            </div>

        </div>

    </div>

{/block}
{block presenterScripts}
<!-- PRESENTER SCRIPTS -->
    <script>
        const clientTemplate = document.querySelector("[data-client-template]")
        const contentContainer = document.querySelector("[data-content-container]")
        const searchInput = document.querySelector("[data-input-search]")

        let datos;

        function writeClientCard(){
            datos.map(Object => {
                    const card = clientTemplate.content.cloneNode(true).children[0]
        //            const ide = card.querySelector("[data-identifier]")
        //            const nif = card.querySelector("[data-nif]")
                    const name = card.querySelector("[data-name]")
                    const tel = card.querySelector("[data-tel]")
                    const dir = card.querySelector("[data-dir]")

                    const info = card.querySelector("[data-action-info]")
                    const edit = card.querySelector("[data-action-edit]")
                    const printers = card.querySelector("[data-action-printers]")
                    const users = card.querySelector("[data-action-users]")
                    {if $usuarioDb->rol == "admin"}
                    const remove = card.querySelector("[data-action-remove]")
                    {/if}
        //            ide.textContent = Object.identifier
        //            nif.textContent = Object.nif
                    name.textContent = Object.name
                    tel.textContent = Object.tel
                    tel.href = "tel:" + Object.tel
                    dir.textContent = Object.dir.substring(0, 45) + " ..."
                    dir.href = "https://www.google.com/maps/search/?api=1&query=" + Object.dir.replace(' ', '+')

                    info.href = {$basePath . "/admin/empresas/info?idEmpresa="} +Object.id
                    edit.href = {$basePath . "/admin/empresas/edit?idEmpresa="} +Object.id
                    printers.href = {$basePath . "/admin/maquinas/default/"} +Object.id + "?mode=8"
                    users.href = {$basePath . "/admin/usuarios/?empresaId="} +Object.id + "?mode=8"

                    {if $usuarioDb->rol == "admin"}
                    remove.href = {$basePath . "/admin/empresas/borrar?idEmpresa="} +Object.id
                    {/if}

                    contentContainer.append(card)
                })
        }
        ///Sort by Name
        const sortByName = document.querySelector("[data-sort-name]")
        sortByName.addEventListener("click", a => {
            var e = contentContainer;
            var child = contentContainer.lastElementChild;
            while (child) {
                e.removeChild(child);
                child = e.lastElementChild;
            }
            if (sortByName.getAttribute("sortByName") == "0") {
                datos.sort((a, b) => a.name.localeCompare(b.name));
                writeClientCard();
                sortByName.setAttribute("sortByName", 1);
            } else {
                datos.sort((a, b) => b.name.localeCompare(a.name));
                writeClientCard();
                sortByName.setAttribute("sortByName", 0);

            }

        })
        /// Buscador
        searchInput.addEventListener( "input", e =>{
            const value = e.target.value.toLowerCase()
            datos.forEach(dato => {
                const isVisible = dato.name.toLowerCase().includes(value) ||  dato.tel.toString().includes(value) || dato.dir.toLowerCase().includes(value) || dato.contact.toLowerCase().includes(value) || dato.nif.toLowerCase().includes(value)
                dato.element.classList.toggle("d-none", !isVisible)
            })
        })
        /// API
        fetch(
                {$basePath . "/api/clients/all/?token=" . $usuarioDb->token . "&_tracy_skip_error"}
        )
            .then(res => res.json())
            .then(data =>
                datos = data.map(Object => {
                    const card = clientTemplate.content.cloneNode(true).children[0]
        //            const ide = card.querySelector("[data-identifier]")
        //            const nif = card.querySelector("[data-nif]")
                    const name = card.querySelector("[data-name]")
                    const tel = card.querySelector("[data-tel]")
                    const dir = card.querySelector("[data-dir]")

                    const info = card.querySelector("[data-action-info]")
                    const edit = card.querySelector("[data-action-edit]")
                    const printers = card.querySelector("[data-action-printers]")
                    const users = card.querySelector("[data-action-users]")
                    {if $usuarioDb->rol == "admin"}
                        const remove = card.querySelector("[data-action-remove]")
                    {/if}
        //            ide.textContent = Object.id
        //            nif.textContent = Object.nif
                    name.textContent = Object.nombre
                    tel.textContent = Object.telefono
                    tel.href = "tel:" + Object.telefono
                    dir.textContent = Object.direccion.substring(0, 45)+" ..."
                    dir.href= "https://www.google.com/maps/search/?api=1&query=" + Object.direccion.replace( ' ', '+')

                    info.href = {$basePath . "/admin/empresas/info?idEmpresa="} + Object.id
                    edit.href = {$basePath . "/admin/empresas/edit?idEmpresa="} + Object.id
                    printers.href = {$basePath . "/admin/maquinas/default/"} + Object.id + "?mode=8"
                    users.href = {$basePath . "/admin/usuarios/?empresaId="} + Object.id + "?mode=8"

                    {if $usuarioDb->rol == "admin"}
                        remove.href = {$basePath . "/admin/empresas/borrar?idEmpresa="} + Object.id
                    {/if}

                    contentContainer.append(card)

                    return {
        //                identifier: Object.id,
        //                nif: Object.nif,
                        name: Object.nombre,
                        tel: Object.telefono,
                        dir: Object.direccion,
                        contact: Object.contacto,
                        element: card
                    }
                })
            )

    </script>
{/block}