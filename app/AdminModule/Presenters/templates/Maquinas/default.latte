{block content}

    <div class="container">
        <div class="row">
            <div class="col col-lg-6">
                {switch $mode}
                    {case 7}
                    <h1>Todas las maquinas</h1>
                {case 8}
                    <h1>Maquinas del clinete {$empresa->nombre}</h1>
                {case 9}
                    <h1>Maquinas del proveedor {$proveedor->nombre}</h1>
                {/switch}
            </div>
            <div class="col col-lg-6">
                <a n:href="Maquinas:add" class="btn text-success"><i class="bi bi-plus-circle-fill"></i>
                    </a>
                <input type="search" id="search" data-input-search>


            </div>
            <div class="col col-lg-10">
                <table class="table" >
                    <thead class="thead-dark">
                    {switch $mode}
                    {case 7}
                    <th class="id" sortById="0" data-sort-id>
                        ID
                    </th>
                    <th class="modelo" sortByModel="0" data-sort-model>
                        Modelo
                    </th>
                    <th class="proveedor">
                        Proveedor
                    </th>
                    <th class="cliente" sortByClient="0" data-sort-client>
                        Cliente
                    </th>
                    <th class="estado" sortByState="0" data-sort-state>
                        Estado
                    </th>
                    <th class="opciones">

                    </th>
                    </thead>
                    {case 8}
                    <th class="id">
                        ID
                    </th>
                    <th class="modelo">
                        Modelo
                    </th>
                    <th class="proveedor">
                        Proveedor
                    </th>
                    <th class="cliente">
                        Cliente
                    </th>
                    <th class="estado">
                        Estado
                    </th>
                    <th class="opciones">
                        Opciones
                    </th>
                    </thead>
                    {case 9}
                    <th class="id">
                        ID
                    </th>
                    <th class="modelo">
                        Modelo
                    </th>
                    <th class="proveedor">
                        Proveedor
                    </th>
                    <th class="cliente">
                        Cliente
                    </th>
                    <th class="estado">
                        Estado
                    </th>
                    <th class="opciones">
                        Opciones
                    </th>
                    </thead>
                    {/switch}

                        <template class="table" data-maquina-template>
                                <tr id="card">
                                    <td class="id" data-identificador>
                                    </td>

                                    <td class="modelo" data-modelo>
                                    </td>

                                    <td class="proveedor" data-proveedor>
                                    </td>

                                    <td class="cliente" data-cliente>
                                    </td>

                                    <td class="estado" data-estado>
                                    </td>
                                    <td class="opciones" data-opciones>
                                        <a href="" data-action-info><i class="bi bi-info-circle-fill"></i></a>
                                    </td>
                                </tr>
                        </template>


                    <tbody data-content-container>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <script>
        const maquinatemplate = document.querySelector("[data-maquina-template]")
        const contentContainer = document.querySelector("[data-content-container]")
        const searchInput = document.querySelector("[data-input-search]")


        let datos
        ///// Sort by Id
        const sortById = document.querySelector("[data-sort-id]")
        sortById.addEventListener("click", a => {
            var e = contentContainer;
            var child = contentContainer.lastElementChild;
            while (child) {
                e.removeChild(child);
                child = e.lastElementChild;
            }
            if (sortById.getAttribute("sortById") == "0") {
                datos.sort((a, b) => a.identifier - b.identifier).map(Object => {
                    const card = maquinatemplate.content.cloneNode(true).children[0]
                    const ide = card.querySelector("[data-identificador]")
                    const modelo = card.querySelector("[data-modelo]")
                    const proveedor = card.querySelector("[data-proveedor]")
                    const cliente = card.querySelector("[data-cliente]")
                    const estado = card.querySelector("[data-estado]")
                    const info = card.querySelector("[data-action-info]")
                    ide.textContent = Object.identifier
                    modelo.textContent = Object.modelo
                    proveedor.textContent = Object.proveedor
                    cliente.textContent = Object.empresa
                    estado.textContent = Object.estado
                    info.href = {$basePath . "/admin/maquinas/info/"} +Object.id

                    contentContainer.append(card)
                })
                sortById.setAttribute("sortById", 1);
            } else {
                datos.sort((a, b) => b.identifier - a.identifier).map(Object => {
                    const card = maquinatemplate.content.cloneNode(true).children[0]
                    const ide = card.querySelector("[data-identificador]")
                    const modelo = card.querySelector("[data-modelo]")
                    const proveedor = card.querySelector("[data-proveedor]")
                    const cliente = card.querySelector("[data-cliente]")
                    const estado = card.querySelector("[data-estado]")
                    const info = card.querySelector("[data-action-info]")
                    ide.textContent = Object.identifier
                    modelo.textContent = Object.modelo
                    proveedor.textContent = Object.proveedor
                    cliente.textContent = Object.empresa
                    estado.textContent = Object.estado
                    info.href = {$basePath . "/admin/maquinas/info/"} +Object.id

                    contentContainer.append(card)
                })
                sortById.setAttribute("sortById", 0);

            }

        })
        //// Sort By Model
        const sortByModel = document.querySelector("[data-sort-model]")
        sortByModel.addEventListener("click", a =>{
            var e = contentContainer;
            var child = contentContainer.lastElementChild;
            while(child){
                e.removeChild(child);
                child = e.lastElementChild;
            }
            if(sortByModel.getAttribute("sortByModel") == "0"){
                datos.sort((a, b) => a.modelo.localeCompare(b.modelo)).map(Object => {
                    const card = maquinatemplate.content.cloneNode(true).children[0]
                    const ide = card.querySelector("[data-identificador]")
                    const modelo = card.querySelector("[data-modelo]")
                    const proveedor = card.querySelector("[data-proveedor]")
                    const cliente = card.querySelector("[data-cliente]")
                    const estado = card.querySelector("[data-estado]")
                    const info = card.querySelector("[data-action-info]")
                    ide.textContent = Object.identifier
                    modelo.textContent = Object.modelo
                    proveedor.textContent = Object.proveedor
                    cliente.textContent = Object.empresa
                    estado.textContent = Object.estado
                    info.href = {$basePath . "/admin/maquinas/info/"} +Object.id

                    contentContainer.append(card)
                })
                sortByModel.setAttribute("sortByModel", 1) ;
            }else{
                datos.sort((a, b) => b.modelo.localeCompare(a.modelo)).map(Object => {
                    const card = maquinatemplate.content.cloneNode(true).children[0]
                    const ide = card.querySelector("[data-identificador]")
                    const modelo = card.querySelector("[data-modelo]")
                    const proveedor = card.querySelector("[data-proveedor]")
                    const cliente = card.querySelector("[data-cliente]")
                    const estado = card.querySelector("[data-estado]")
                    const info = card.querySelector("[data-action-info]")
                    ide.textContent = Object.identifier
                    modelo.textContent = Object.modelo
                    proveedor.textContent = Object.proveedor
                    cliente.textContent = Object.empresa
                    estado.textContent = Object.estado
                    info.href = {$basePath . "/admin/maquinas/info/"} +Object.id

                    contentContainer.append(card)
                })
                sortByModel.setAttribute("sortByModel", 0);

            }

        })
        //// Sort By Client
        const sortByClient = document.querySelector("[data-sort-client]")
        sortByClient.addEventListener("click", a => {
            var e = contentContainer;
            var child = contentContainer.lastElementChild;
            while (child) {
                e.removeChild(child);
                child = e.lastElementChild;
            }
            if (sortByClient.getAttribute("sortByClient") == "0") {
                datos.sort((a, b) => a.empresa.localeCompare(b.empresa)).map(Object => {
                    const card = maquinatemplate.content.cloneNode(true).children[0]
                    const ide = card.querySelector("[data-identificador]")
                    const modelo = card.querySelector("[data-modelo]")
                    const proveedor = card.querySelector("[data-proveedor]")
                    const cliente = card.querySelector("[data-cliente]")
                    const estado = card.querySelector("[data-estado]")
                    const info = card.querySelector("[data-action-info]")
                    ide.textContent = Object.identifier
                    modelo.textContent = Object.modelo
                    proveedor.textContent = Object.proveedor
                    cliente.textContent = Object.empresa
                    estado.textContent = Object.estado
                    info.href = {$basePath . "/admin/maquinas/info/"} +Object.id

                    contentContainer.append(card)
                })
                sortByClient.setAttribute("sortByClient", 1);
            } else {
                datos.sort((a, b) => b.empresa.localeCompare(a.empresa)).map(Object => {
                    const card = maquinatemplate.content.cloneNode(true).children[0]
                    const ide = card.querySelector("[data-identificador]")
                    const modelo = card.querySelector("[data-modelo]")
                    const proveedor = card.querySelector("[data-proveedor]")
                    const cliente = card.querySelector("[data-cliente]")
                    const estado = card.querySelector("[data-estado]")
                    const info = card.querySelector("[data-action-info]")
                    ide.textContent = Object.identifier
                    modelo.textContent = Object.modelo
                    proveedor.textContent = Object.proveedor
                    cliente.textContent = Object.empresa
                    estado.textContent = Object.estado
                    info.href = {$basePath . "/admin/maquinas/info/"} +Object.id

                    contentContainer.append(card)
                })
                sortByClient.setAttribute("sortByClient", 0);

            }

        })

        //// Sort By State
        const sortByState = document.querySelector("[data-sort-state]")
        sortByState.addEventListener("click", a => {
            var e = contentContainer;
            var child = contentContainer.lastElementChild;
            while (child) {
                e.removeChild(child);
                child = e.lastElementChild;
            }
            if (sortByState.getAttribute("sortByState") == "0") {
                datos.sort((a, b) => a.estado.localeCompare(b.estado)).map(Object => {
                    const card = maquinatemplate.content.cloneNode(true).children[0]
                    const ide = card.querySelector("[data-identificador]")
                    const modelo = card.querySelector("[data-modelo]")
                    const proveedor = card.querySelector("[data-proveedor]")
                    const cliente = card.querySelector("[data-cliente]")
                    const estado = card.querySelector("[data-estado]")
                    const info = card.querySelector("[data-action-info]")
                    ide.textContent = Object.identifier
                    modelo.textContent = Object.modelo
                    proveedor.textContent = Object.proveedor
                    cliente.textContent = Object.empresa
                    estado.textContent = Object.estado
                    info.href = {$basePath . "/admin/maquinas/info/"} +Object.id

                    contentContainer.append(card)
                })
                sortByState.setAttribute("sortByState", 1);
            } else {
                datos.sort((a, b) => b.estado.localeCompare(a.estado)).map(Object => {
                    const card = maquinatemplate.content.cloneNode(true).children[0]
                    const ide = card.querySelector("[data-identificador]")
                    const modelo = card.querySelector("[data-modelo]")
                    const proveedor = card.querySelector("[data-proveedor]")
                    const cliente = card.querySelector("[data-cliente]")
                    const estado = card.querySelector("[data-estado]")
                    const info = card.querySelector("[data-action-info]")
                    ide.textContent = Object.identifier
                    modelo.textContent = Object.modelo
                    proveedor.textContent = Object.proveedor
                    cliente.textContent = Object.empresa
                    estado.textContent = Object.estado
                    info.href = {$basePath . "/admin/maquinas/info/"} +Object.id

                    contentContainer.append(card)
                })
                sortByState.setAttribute("sortByState", 0);

            }

        })



        searchInput.addEventListener("input", e =>{
            const value = e.target.value.toLowerCase()
            datos.forEach(dato => {
                const isVisible = dato.modelo.toLowerCase().includes(value) || dato.identifier.toString().includes(value) || dato.empresa.toLowerCase().includes(value) || dato.estado.toLowerCase().includes(value) || dato.comentario.toLowerCase().includes(value)
                dato.element.classList.toggle("d-none", !isVisible)
            })

        })



        fetch(
            {if $mode == 7}
                {$basePath . "/api/printers/all/?token=" . $usuarioDb->token. "&_tracy_skip_error"}
            {elseif $mode == 8}
                {$basePath . "/api/printers/all/?token=" .$usuarioDb->token. "&mode=8&ide=" . $empresa->id . "&_tracy_skip_error"}
            {elseif $mode == 9}
                {$basePath . "/api/printers/all/?token=" . $usuarioDb->token. "&mode=9&ide=" . $proveedor->id . "&_tracy_skip_error"}
            {/if}
        )
            .then(res => res.json())
            .then(data => {
                datos = data.map(Object => {
                    const card = maquinatemplate.content.cloneNode(true).children[0]
                    const ide = card.querySelector("[data-identificador]")
                    const modelo = card.querySelector("[data-modelo]")
                    const proveedor = card.querySelector("[data-proveedor]")
                    const cliente = card.querySelector("[data-cliente]")
                    const estado = card.querySelector("[data-estado]")
                    const info = card.querySelector("[data-action-info]")
                    ide.textContent = Object.id
                    modelo.textContent = Object.modelo
                    proveedor.textContent = Object.proveedor
                    cliente.textContent = Object.empresa
                    estado.textContent = Object.estado
                    info.href = {$basePath. "/admin/maquinas/info/"} + Object.id

                    contentContainer.append(card)

                    return {
                        identifier: Object.id,
                        modelo: Object.modelo,
                        proveedor: Object.proveedor,
                        empresa: Object.empresa,
                        estado: Object.estado,
                        comentario: Object.comentario,
                        origen: Object.origen,
                        tipocontrato: Object.tipocontrato,
                        element: card
                    }
                })
            })

    </script>
{/block}
{block mas_scripts}
{/block}
