{block content}
    <div class="container">
        <div class="row">

            <!--Load the AJAX API-->
            <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
            <script type="text/javascript">

                // Load the Visualization API and the corechart package.
                google.charts.load('current', {'packages': ['corechart']});

                // Set a callback to run when the Google Visualization API is loaded.
                google.charts.setOnLoadCallback(drawChart);

                // Callback that creates and populates a data table,
                // instantiates the pie chart, passes in the data and
                // draws it.
                function drawChart() {

                    // Create the data table.
                    var data = new google.visualization.DataTable();
                    data.addColumn('string', 'Topping');
                    data.addColumn('number', 'Slices');
                    data.addRows([
                        {for $i = 0; $i < count($datosMaquinasCantidadKey); $i++}
                        [{$datosMaquinasCantidadKey[$i]}, {$datosMaquinasCantidad[$datosMaquinasCantidadKey[$i]]}],
                        {/for}
                    ]);
                    // Set chart options
                    var options = {
                        'title': 'Fotocopiadoras en la empresa',
                        'width': 900,
                        'height': 1000
                    };

                    // Instantiate and draw our chart, passing in some options.
                    var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
                    chart.draw(data, options);
                }
            </script>
            <script type="text/javascript">
            google.charts.load('current', {'packages':['corechart']});
            google.charts.setOnLoadCallback(drawChart);

            function drawChart() {
                var data = google.visualization.arrayToDataTable([
                ['Fecha', 'Entradas'],
                {foreach $copiesLastWeek as $copiesDay}
                [{key($copiesDay)}, {$copiesDay[key($copiesDay)]}],
                {/foreach}
                ]);

                var options = {
                title: 'Entradas de copias',
                hAxis: {
                    title: 'Fecha',  titleTextStyle: {
                        color: '#333'
                        }
                    },
                vAxis: {
                    minValue: 0}
                };

                var chart = new google.visualization.AreaChart(document.getElementById('chart_div_copies_last_week'));
                chart.draw(data, options);
            }
            </script>
           
            <div class="col col-lg-10 col-md-10">
                <div id="changes_div">
                <h3>Ultimas actualizaciones</h3>
                    <template id="changes_template" class=" rounded shadow p-3 mb-5 bg-body">
                        <div>
                            <h4 data-author></h3>
                            <p data-commit></p>
                        </div>
                    </template>
                </div>
            </div>
            <div class="col col-lg-10 col-md-10">
                <div id="chart_div"></div>
                <div id="chart_div_copies_last_week"></div>
            </div>
        </div>
    </div>
     <script type="text/javascript">
     // GITHUB
                const token = "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"
                const changesTemplate = document.querySelector("#changes_template");
                const changesContainer = document.querySelector("#changes_div");
                fetch("https://api.github.com/repos/gyswu/averiasmbd/git/refs/heads/master", {
                          headers: {
                        Authorization: `token ${ token }`
                    }
                })
                .then(res => res.json())
                .then( data => {
                        fetch(data.object.url, {
                                headers: {
                                Authorization: `token ${ token }`
                                }
                            })
                        .then(res => res.json())
                        .then( datos => {
                            const carta = changesTemplate.content.cloneNode(true).children[0]
                            const changeAuthor = carta.querySelector("[data-author]")
                            const commitAuthor = carta.querySelector("[data-commit]")
                                    //carta.textContent = info.committer.name
                            changeAuthor.textContent = datos.author.date + " - " + datos.committer.name
                            commitAuthor.textContent = datos.message

                            changesContainer.append(carta)

                                fetch(datos.parents[0].url, {
                                        headers: {
                                        Authorization: `token ${ token }`
                                        }
                                    })
                                .then(res => res.json())
                                .then( info => {
                                    const carta = changesTemplate.content.cloneNode(true).children[0]
                                    const changeAuthor = carta.querySelector("[data-author]")
                                    const commitAuthor = carta.querySelector("[data-commit]")
                                    //carta.textContent = info.committer.name
                                    changeAuthor.textContent = info.author.date + " - " + info.committer.name
                                    commitAuthor.textContent = info.message

                                    changesContainer.append(carta)

                                    fetch(info.parents[0].url, {
                                            headers: {
                                            Authorization: `token ${ token }`
                                            }
                                        })
                                        .then(res => res.json())
                                        .then( info => {
                                        const carta = changesTemplate.content.cloneNode(true).children[0]
                                        const changeAuthor = carta.querySelector("[data-author]")
                                        const commitAuthor = carta.querySelector("[data-commit]")
                                        //carta.textContent = info.committer.name
                                        changeAuthor.textContent = info.author.date + " - " + info.committer.name
                                        commitAuthor.textContent = info.message

                                        changesContainer.append(carta)
                                        fetch(info.parents[0].url, {
                                            headers: {
                                            Authorization: `token ${ token }`
                                            }
                                        })
                                        .then(res => res.json())
                                        .then( info => {
                                        const carta = changesTemplate.content.cloneNode(true).children[0]
                                        const changeAuthor = carta.querySelector("[data-author]")
                                        const commitAuthor = carta.querySelector("[data-commit]")
                                        //carta.textContent = info.committer.name
                                        changeAuthor.textContent = info.author.date + " - " + info.committer.name
                                        commitAuthor.textContent = info.message

                                        changesContainer.append(carta)
                                        fetch(info.parents[0].url, {
                                            headers: {
                                            Authorization: `token ${ token }`
                                            }
                                            })
                                            .then(res => res.json())
                                            .then( info => {
                                            const carta = changesTemplate.content.cloneNode(true).children[0]
                                            const changeAuthor = carta.querySelector("[data-author]")
                                            const commitAuthor = carta.querySelector("[data-commit]")
                                            //carta.textContent = info.committer.name
                                            changeAuthor.textContent = info.author.date + " - " + info.committer.name
                                            commitAuthor.textContent = info.message

                                            changesContainer.append(carta)
                                            
                                        })
                                    })
                                        
                                })
                            })
                            
                        })    
                })
                
            </script>


{/block}